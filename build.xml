<!--
	Build file for photoservlet.

	Copyright (c) 2002	Dustin Sallings <dustin@spy.net>

	$Id: build.xml,v 1.48 2003/12/01 23:55:04 dustin Exp $
-->

<project name="PhotoServlet" default="photo.jar" basedir=".">

	<property name="SRCDIR" value="src"/>
	<property name="BUILDTOP" value="=build"/>
	<property name="BUILDDIR" value="${BUILDTOP}/classes"/>
	<property name="GENDIR" value="=build/gen"/>
	<property name="PROJECT" value="spyshop"/>
	<property name="LIBDIR" value="${BUILDTOP}/lib"/>
	<property name="TLDDIR" value="${BUILDTOP}/tmp/tlds"/>
	<property name="BUILDTMP" value="${BUILDTOP}/tmp/"/>
	<property name="DOCDIR" value="${BUILDTOP}/docs/"/>
	<property name="WARDIR" value="${BUILDTOP}/wars/"/>
	<property name="WARDEST" value="/afs/.spy.net/misc/web/resin/wars"/>

	<property name="wars"
		value="photo,beckerphoto,wisephoto,jasonphoto,photodemo"/>

	<!-- Set up the class path -->
	<path id="photo.classpath">
		<fileset dir="photo/WEB-INF/lib">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${user.home}/lib/java">
			<include name="jsdk.jar"/>
			<include name="resin.jar"/>
			<include name="dom.jar"/>
			<include name="sax.jar"/>
			<include name="xerces.jar"/>
		</fileset>
		<pathelement path="${BUILDDIR}"/>
	</path>

	<patternset id="arch-stuff">
		<exclude name="**/*.arch-ids/**"/>
	</patternset>

	<target name="prepare">
		<mkdir dir="${BUILDDIR}"/>
		<mkdir dir="${GENDIR}"/>
		<mkdir dir="${TLDDIR}"/>
		<mkdir dir="${LIBDIR}"/>
		<mkdir dir="${WARDIR}"/>
	</target>

	<target name="clean" description="Clean up all generated files.">
		<delete dir="=build"/>
	</target>

	<target name="docs" depends="photoresources.properties,spfiles"
			description="Create the documentation.">
		<mkdir dir="${DOCDIR}"/>
		<javadoc destdir="${DOCDIR}"
			author="true"
			version="true"
			use="true"
			sourcepath="${SRCDIR}"
			packagenames="net.spy.*"
			classpathref="photo.classpath"
			windowtitle="PhotoServlet API Documentation - build ${build.number} from ${build.date}"
			doctitle="PhotoServlet API Documentation - build ${build.number} from ${build.date}">

			<link href="http://java.sun.com/products/servlet/2.3/javadoc/"/>
			<link href="http://java.sun.com/products/servlet/2.2/javadoc/"/>
			<link href="http://java.sun.com/j2se/1.4.1/docs/api/"/>
			<link href="http://jakarta.apache.org/struts/api/"/>
			<link href="http://jakarta.apache.org/commons/collections/api/"/>
			<link href="http://jakarta.apache.org/commons/validator/apidocs/"/>
			<link href="http://bleu.west.spy.net/~dustin/spyjar/j2/doc/"/>
		</javadoc>
	</target>

	<!-- to skip validation, use ``ant -Dnovalidate=true ...'' -->
	<target name="validateconfigs" unless="novalidate">
		<xmlvalidate failonerror="yes">
			<fileset dir="photo/WEB-INF"
				includes="**/*.xml" excludes="**/resin-web.xml"/>
		</xmlvalidate>
	</target>

	<!-- This is specific to my development at home. -->
	<target name="install"
		description="Install a new build in my environment (not for most people)"
		depends="install-wars"/>

	<target name="install-war-var">
		<echo message="Installing ${which}.war"/>
		<copy file="${WARDIR}/${which}.war" tofile="${WARDEST}/${which}.war"/>
	</target>

	<target name="install-wars" description="Install all wars" depends="wars">
		<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
		<foreach list="${wars}" target="install-war-var" param="which"/>
	</target>

	<target name="photo.war" depends="photo.jar">
		<jar jarfile="${BUILDTOP}/photo.war" basedir="." excludes="**">
			<zipfileset dir="photo" prefix="">
				<patternset refid="arch-stuff"/>
			</zipfileset>
			<zipfileset dir="${BUILDTOP}" prefix="WEB-INF/lib" includes="photo.jar"/>
			<zipfileset dir="${BUILDTOP}" prefix="WEB-INF" includes="photo.conf">
				<patternset refid="arch-stuff"/>
			</zipfileset>
		</jar>
	</target>

	<target name="war-var" depends="photo.jar">
		<echo message="Building ${which}.war"/>
		<filter token="INSTANCE" value="${which}"/>
		<copy file="etc/photo.conf" tofile="${BUILDTOP}/photo.conf"
			filtering="true"/>
		<jar jarfile="${WARDIR}/${which}.war" basedir="." excludes="**">
			<zipfileset dir="photo" prefix="">
				<patternset refid="arch-stuff"/>
			</zipfileset>
			<zipfileset dir="${BUILDTOP}" prefix="WEB-INF/lib" includes="photo.jar"/>
			<zipfileset dir="${BUILDTOP}" prefix="WEB-INF" includes="photo.conf">
				<patternset refid="arch-stuff"/>
			</zipfileset>
			<zipfileset dir="${BUILDTOP}" prefix="WEB-INF" includes="photo.conf"/>
		</jar>
		<delete file="${BUILDTOP}/photo.conf"/>
	</target>

	<target name="wars" depends="photo.jar,validateconfigs">
		<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
		<foreach list="${wars}" target="war-var" param="which"/>
	</target>

	<target name="install-docs"
		description="Install the documentation"
		depends="docs">
		<copy todir="/afs/spy.net/home/dustin/public_html/doc/photo">
			<fileset dir="${DOCDIR}">
				<include name="**/*.html"/>
				<include name="**/*.css"/>
				<include name="**/package-list"/>
			</fileset>
		</copy>
	</target>

	<target name="photo.jar"
		description="Create photo.jar"
		depends="all,photoresources.properties">
		<jar jarfile="${BUILDTOP}/photo.jar" basedir="${BUILDDIR}">
			<include name="**/*.class"/>
			<include name="net/**/*.properties"/>
			<include name="net/**/*.sql"/>
		</jar>
	</target>

	<target name="content.zip" description="Build a content zip file">
		<zip zipfile="${BUILDTOP}/content.zip" basedir="." excludes="**">
			<zipfileset dir="photo" prefix="" includes="**/*.jsp"/>
			<zipfileset dir="photo" prefix="" includes="**/*.xml"/>
			<zipfileset dir="photo" prefix="" includes="**/*.css"/>
			<zipfileset dir="photo" prefix="" includes="**/*.png"/>
			<zipfileset dir="photo" prefix="" includes="**/*.tld"/>
		</zip>
	</target>

	<target name="photo.zip" depends="photo.war,docs">
		<zip zipfile="${BUILDTOP}/photo.zip" basedir="${BUILDTOP}" excludes="**">
			<zipfileset dir="${BUILDTOP}" prefix="" includes="doc/**"/>
			<zipfileset dir="${DOCDIR}" prefix="doc/api" includes="**"/>
			<zipfileset dir="." prefix="" excludes="**/CVS" includes="etc/*">
				<patternset refid="arch-stuff"/>
			</zipfileset>
			<zipfileset dir="." prefix="" excludes="**/CVS" includes="contrib/*">
				<patternset refid="arch-stuff"/>
			</zipfileset>
			<zipfileset dir="${BUILDTOP}" prefix="" includes="photo.war"/>
			<zipfileset dir="doc" prefix="" includes="HOWTO"/>
		</zip>
	</target>

	<target name="dist"
		description="Create a release."
		depends="photo.zip">
		<tstamp/>
		<move file="${BUILDTOP}/photo.zip"
			tofile="${BUILDTOP}/photoservlet-${DSTAMP}.zip"/>
	</target>

	<target name="photoresources.properties" unless="properties.upToDate">
		<buildnumber file="etc/build.number"/>
		<tstamp/>
		<exec executable="./etc/tree-version" outputproperty="tree.version"/>
		<copy file="${SRCDIR}/net/spy/photo/photoresources.properties.in"
			tofile="${BUILDDIR}/net/spy/photo/photoresources.properties"/>
		<propertyfile file="${BUILDDIR}/net/spy/photo/photoresources.properties">
			<entry key="build.date" type="date" value="now"/>
			<entry key="build.dstamp" value="${DSTAMP}"/>
			<entry key="build.tstamp" value="${TSTAMP}"/>
			<entry key="build.dtstamp" value="${DSTAMP}${TSTAMP}"/>
			<entry key="build.number" value="${build.number}"/>
			<entry key="tree.version" value="${tree.version}"/>
		</propertyfile>
		<property file="${BUILDDIR}/net/spy/photo/photoresources.properties"/>
		<property name="properties.upToDate" value="true"/>
	</target>

	<target name="all" depends="prepare,rmic,spfiles">
		<javac srcdir="${SRCDIR}" destdir="${BUILDDIR}"
			deprecation="on" debug="on" verbose="false">
			<classpath refid="photo.classpath"/>
			<include name="net/spy/photo/**/*.java"/>
			<include name="net/spy/rmi/**/*.java"/>
		</javac>
	</target>

	<target name="spfiles">
		<taskdef name="spgen" classname="net.spy.util.SPGenTask">
			<classpath refid="photo.classpath"/>
		</taskdef>
		<spgen srcdir="${SRCDIR}" destdir="${GENDIR}"/>
		<javac srcdir="${GENDIR}" destdir="${BUILDDIR}"
			deprecation="on" debug="on" verbose="false">
			<classpath refid="photo.classpath"/>
		</javac>
	</target>

	<target name="rmic" depends="pre-rmic">
		<rmic base="${BUILDDIR}"
			classname="net.spy.photo.rmi.RemoteImageServerImpl">
			<classpath refid="photo.classpath"/>
		</rmic>
	</target>

	<target name="pre-rmic" depends="spfiles">
		<javac srcdir="${SRCDIR}" destdir="${BUILDDIR}"
			deprecation="on" debug="on" verbose="false">
			<classpath refid="photo.classpath"/>
			<include name="net/spy/photo/rmi/RemoteImageServerImpl.java"/>
		</javac>
	</target>

	<!-- import scrubber -->
	<target name="scrubimports">
		<taskdef name="scrub"
			classname="net.sourceforge.importscrubber.ant.ImportScrubberTask">
			<classpath refid="photo.classpath"/>
			<classpath>
				<fileset dir="${user.home}/lib/importscrubber">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</taskdef>

		<scrub root="${SRCDIR}"
			format="each" sortjavalibshigh="true" recurse="true"/>
	</target>

	<target name="staticsite"
		description="Build a static site (define USERNAME)" depends="all">
		<java classname="net.spy.photo.tools.MakeStaticSite" fork="yes">
			<classpath refid="photo.classpath"/>
			<classpath>
				<pathelement path="."/>
			</classpath>
			<arg value="${USERNAME}"/>
		</java>
	</target>

	<!-- PMD code checker -->
	<target name="pmd">
		<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask">
			<classpath>
				<fileset dir="${user.home}/lib/java">
					<include name="pmd-0.3.jar"/>
				</fileset>
			</classpath>
		</taskdef>
		<pmd reportFile="pmd-unused-report.html"
			rulesetfiles="rulesets/unusedcode.xml"
			format="html">
			<fileset dir=".">
				<include name="net/spy/photo/**/*.java"/>
				<exclude name="net/spy/photo/JpegEncoder.java"/>
			</fileset>
    </pmd>
			<pmd reportFile="pmd-basic-report.html"
				rulesetfiles="rulesets/basic.xml"
			format="html">
			<fileset dir=".">
				<include name="net/spy/photo/**/*.java"/>
				<exclude name="net/spy/photo/JpegEncoder.java"/>
			</fileset>
    </pmd>
			<pmd reportFile="pmd-design-report.html"
				rulesetfiles="rulesets/design.xml"
			format="html">
			<fileset dir=".">
				<include name="net/spy/photo/**/*.java"/>
				<exclude name="net/spy/photo/JpegEncoder.java"/>
			</fileset>
		</pmd>
	</target>

	<!-- checkstyle -->
	<target name="checkstyle">
		<taskdef name="checkstyle"
			classname="com.puppycrawl.tools.checkstyle.CheckStyleTask">
			<classpath>
				<fileset dir="${user.home}/lib/checkstyle">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</taskdef>

		<delete file="checkstyle.txt"/>

			<!-- javadocScope="package" -->
		<checkstyle
			allowtabs="yes"
			tabwidth="4"
			allowNoAuthor="yes"
			requirePackageHtml="yes"
			javadocScope="nothing"
			ignorewhitespace="yes">

			<fileset dir=".">
				<include name="net/spy/photo/**/*.java"/>
				<exclude name="net/spy/photo/JpegEncoder.java"/>
			</fileset>
			<formatter type="plain" toFile="checkstyle.txt"/>
		</checkstyle>
	</target>

</project>
