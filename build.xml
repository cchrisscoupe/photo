<!--
	Build file for photoservlet.

	Copyright (c) 2002	Dustin Sallings <dustin@spy.net>

	$Id: build.xml,v 1.48 2003/12/01 23:55:04 dustin Exp $
-->

<project name="PhotoServlet" default="photo.jar" basedir=".">

	<!-- Set up the class path -->
	<path id="photo.classpath">
		<fileset dir="photo/WEB-INF/lib">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${user.home}/lib/java">
			<include name="jsdk.jar"/>
			<include name="resin.jar"/>
			<include name="dom.jar"/>
			<include name="sax.jar"/>
			<include name="xerces.jar"/>
		</fileset>
	</path>

	<target name="clean" description="Clean up all generated files.">
		<delete>
			<fileset dir="net">
				<include name="**/*.class"/>
				<include name="spy/photo/sp/*.java"/>
				<include name="spy/photo/sp/*/*.java"/>
				<include name="spy/photo/photoresources.properties"/>
			</fileset>
			<fileset dir=".">
				<include name="photo.jar"/>
				<include name="photo.war"/>
				<include name="photoservlet-*.zip"/>
				<include name="pmd-*-report.html"/>
				<include name="checkstyle.txt"/>
			</fileset>
		</delete>
		<delete dir="docs"/>
	</target>

	<target name="docs" depends="photoresources.properties,spfiles"
			description="Create the documentation.">
		<mkdir dir="docs"/>
		<javadoc destdir="docs"
			author="true"
			version="true"
			use="true"
			sourcepath="."
			packagenames="net.spy.*"
			classpathref="photo.classpath"
			windowtitle="PhotoServlet API Documentation - build ${build.number} from ${build.date}"
			doctitle="PhotoServlet API Documentation - build ${build.number} from ${build.date}">

			<link href="http://java.sun.com/products/servlet/2.3/javadoc/"/>
			<link href="http://java.sun.com/products/servlet/2.2/javadoc/"/>
			<link href="http://java.sun.com/j2se/1.4.1/docs/api/"/>
			<link href="http://jakarta.apache.org/struts/api/"/>
			<link href="http://jakarta.apache.org/commons/collections/api/"/>
			<link href="http://jakarta.apache.org/commons/validator/apidocs/"/>
			<link href="http://bleu.west.spy.net/~dustin/spyjar/j2/doc/"/>
		</javadoc>
	</target>

	<target name="validateconfigs">
		<xmlvalidate failonerror="yes">
			<fileset dir="photo/WEB-INF" includes="**/*.xml"/>
		</xmlvalidate>
	</target>

	<!-- This is specific to my development at home. -->
	<target name="install"
		description="Install a new build in my environment (not for most people)"
		depends="install-web-app"/>

	<target name="install-web-app-var">
		<echo message="Installing to ${location}"/>
		<copy todir="/afs/.spy.net/misc/web/root/${location}/">
			<fileset dir="photo">
				<include name="**/*.html"/>
				<include name="**/*.jsp"/>
				<include name="**/*.css"/>
				<include name="images/*"/>
				<include name="WEB-INF/lib/*.jar"/>
				<include name="WEB-INF/struts-config.xml"/>
				<include name="WEB-INF/web.xml"/>
				<include name="WEB-INF/scripts/**"/>
				<include name="WEB-INF/validator-rules.xml"/>
				<include name="WEB-INF/validation.xml"/>
				<include name="WEB-INF/tiles-defs.xml"/>
				<include name="WEB-INF/tlds/*.tld"/>
				<!-- Avoid overwriting spy.jar in case I've done specific upgrades. -->
				<exclude name="WEB-INF/lib/spy.jar"/>
			</fileset>
		</copy>
		<copy file="photo.jar"
			tofile="/afs/.spy.net/misc/web/root/${location}/WEB-INF/lib/photo.jar"/>
	</target>

	<target name="install-web-app" depends="photo.jar,install-demo">
		<antcall target="install-web-app-var">
			<param name="location" value="photo"/>
		</antcall>
		<antcall target="install-web-app-var">
			<param name="location" value="beckerphoto"/>
		</antcall>
		<antcall target="install-web-app-var">
			<param name="location" value="wisephoto"/>
		</antcall>
		<antcall target="install-web-app-var">
			<param name="location" value="jasonphoto"/>
		</antcall>
	</target>

	<target name="install-demo-content"
		description="Install the web app content without making a new jar">
		<antcall target="install-web-app-var">
			<param name="location" value="photodemo"/>
		</antcall>
	</target>

	<target name="install-demo"
			description="Update the demo installation"
			depends="photo.jar,install-demo-content"/>

	<target name="install-docs"
		description="Install the documentation"
		depends="docs">
		<copy todir="/afs/spy.net/home/dustin/public_html/doc/photo">
			<fileset dir="docs">
				<include name="**/*.html"/>
				<include name="**/*.css"/>
				<include name="**/package-list"/>
			</fileset>
		</copy>
	</target>

	<target name="photo.jar"
		description="Create photo.jar"
		depends="all,photoresources.properties,validateconfigs">
		<jar jarfile="photo.jar" basedir=".">
			<include name="**/*.class"/>
			<include name="net/**/*.properties"/>
			<include name="net/**/*.sql"/>
		</jar>
	</target>

	<target name="content.zip" description="Build a content zip file">
		<zip zipfile="content.zip" basedir="." excludes="**">
			<zipfileset dir="photo" prefix="" includes="**/*.jsp"/>
			<zipfileset dir="photo" prefix="" includes="**/*.xml"/>
			<zipfileset dir="photo" prefix="" includes="**/*.css"/>
			<zipfileset dir="photo" prefix="" includes="**/*.png"/>
			<zipfileset dir="photo" prefix="" includes="**/*.tld"/>
		</zip>
	</target>

	<target name="photo.war" depends="photo.jar">
		<jar jarfile="photo.war" basedir="." excludes="**">
			<zipfileset dir="photo" prefix=""/>
			<zipfileset dir="." prefix="WEB-INF/lib" includes="photo.jar"/>
			<zipfileset dir="etc" prefix="WEB-INF" includes="photo.conf"/>
		</jar>
	</target>

	<target name="photo.zip" depends="photo.war,docs">
		<zip zipfile="photo.zip" basedir="." excludes="**">
			<zipfileset dir="." prefix="" includes="doc/**"/>
			<zipfileset dir="docs" prefix="doc/api" includes="**"/>
			<zipfileset dir="." prefix="" excludes="**/CVS" includes="etc/*"/>
			<zipfileset dir="." prefix="" excludes="**/CVS" includes="contrib/*"/>
			<zipfileset dir="." prefix="" includes="photo.war"/>
		</zip>
	</target>

	<target name="dist"
		description="Create a release."
		depends="photo.zip">
		<tstamp/>
		<move file="photo.zip" tofile="photoservlet-${DSTAMP}.zip"/>
	</target>

	<target name="photoresources.properties" unless="properties.upToDate">
		<buildnumber file="etc/build.number"/>
		<tstamp/>
		<copy file="net/spy/photo/photoresources.properties.in"
			tofile="net/spy/photo/photoresources.properties"/>
		<propertyfile file="net/spy/photo/photoresources.properties">
			<entry key="build.date" type="date" value="now"/>
			<entry key="build.dstamp" value="${DSTAMP}"/>
			<entry key="build.tstamp" value="${TSTAMP}"/>
			<entry key="build.dtstamp" value="${DSTAMP}${TSTAMP}"/>
			<entry key="build.number" value="${build.number}"/>
		</propertyfile>
		<property file="net/spy/photo/photoresources.properties"/>
		<property name="properties.upToDate" value="true"/>
	</target>

	<target name="all" depends="rmic,spfiles">
		<javac srcdir="." destdir="." deprecation="on" debug="on" verbose="false">
			<classpath refid="photo.classpath"/>
			<include name="net/spy/photo/**/*.java"/>
			<include name="net/spy/rmi/**/*.java"/>
		</javac>
	</target>

	<target name="spfiles">
		<taskdef name="spgen" classname="net.spy.util.SPGenTask">
			<classpath refid="photo.classpath"/>
		</taskdef>
		<spgen srcdir="." destdir="."/>
	</target>

	<target name="rmic" depends="pre-rmic">
		<rmic base="." classname="net.spy.photo.rmi.RemoteImageServerImpl">
			<classpath refid="photo.classpath"/>
		</rmic>
	</target>

	<target name="pre-rmic" depends="spfiles">
		<javac srcdir="." destdir="." deprecation="on" debug="on" verbose="false">
			<classpath refid="photo.classpath"/>
			<include name="net/spy/photo/rmi/RemoteImageServerImpl.java"/>
		</javac>
	</target>

	<!-- import scrubber -->
	<target name="scrubimports">
		<taskdef name="scrub"
			classname="net.sourceforge.importscrubber.ant.ImportScrubberTask">
			<classpath refid="photo.classpath"/>
			<classpath>
				<fileset dir="${user.home}/lib/importscrubber">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</taskdef>

		<scrub root="." format="each" sortjavalibshigh="true" recurse="true"/>
	</target>

	<target name="staticsite"
		description="Build a static site (define USERNAME)" depends="all">
		<java classname="net.spy.photo.tools.MakeStaticSite" fork="yes">
			<classpath refid="photo.classpath"/>
			<classpath>
				<pathelement path="."/>
			</classpath>
			<arg value="${USERNAME}"/>
		</java>
	</target>

	<!-- PMD code checker -->
	<target name="pmd">
		<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask">
			<classpath>
				<fileset dir="${user.home}/lib/java">
					<include name="pmd-0.3.jar"/>
				</fileset>
			</classpath>
		</taskdef>
		<pmd reportFile="pmd-unused-report.html"
			rulesetfiles="rulesets/unusedcode.xml"
			format="html">
			<fileset dir=".">
				<include name="net/spy/photo/**/*.java"/>
				<exclude name="net/spy/photo/JpegEncoder.java"/>
			</fileset>
    </pmd>
			<pmd reportFile="pmd-basic-report.html"
				rulesetfiles="rulesets/basic.xml"
			format="html">
			<fileset dir=".">
				<include name="net/spy/photo/**/*.java"/>
				<exclude name="net/spy/photo/JpegEncoder.java"/>
			</fileset>
    </pmd>
			<pmd reportFile="pmd-design-report.html"
				rulesetfiles="rulesets/design.xml"
			format="html">
			<fileset dir=".">
				<include name="net/spy/photo/**/*.java"/>
				<exclude name="net/spy/photo/JpegEncoder.java"/>
			</fileset>
		</pmd>
	</target>

	<!-- checkstyle -->
	<target name="checkstyle">
		<taskdef name="checkstyle"
			classname="com.puppycrawl.tools.checkstyle.CheckStyleTask">
			<classpath>
				<fileset dir="${user.home}/lib/checkstyle">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</taskdef>

		<delete file="checkstyle.txt"/>

			<!-- javadocScope="package" -->
		<checkstyle
			allowtabs="yes"
			tabwidth="4"
			allowNoAuthor="yes"
			requirePackageHtml="yes"
			javadocScope="nothing"
			ignorewhitespace="yes">

			<fileset dir=".">
				<include name="net/spy/photo/**/*.java"/>
				<exclude name="net/spy/photo/JpegEncoder.java"/>
			</fileset>
			<formatter type="plain" toFile="checkstyle.txt"/>
		</checkstyle>
	</target>

</project>
