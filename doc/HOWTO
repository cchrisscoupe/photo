Dustin's PhotoServlet Quick Install Guide (12/25/2000)

This is a quick install guide.  I assume you know what you're doing
with databases and servlets.

----------------------------------------------------------------------

Contents:

BEFORE YOU BEGIN!!!
UPGRADING FROM A PREVIOUS VERSION OF THE PHOTOSERVLET
MIGRATION
INSTALLING FROM SCRATCH
  DATABASE SETUP
  APPLICATION SERVER SETUP
GENERAL USAGE
ERRATA

----------------------------------------------------------------------

BEFORE YOU BEGIN!!!

1. Make sure you read the project home page at
    http://photoservlet.sourceforge.net.

2. Make sure you have all of the components listed under 
    ``What Do I Need To Start My Own''

3. Make sure they're all working properly.

----------------------------------------------------------------------

UPGRADING FROM A PREVIOUS VERSION OF THE PHOTOSERVLET

Step 1. Getting the updated files.

If you have the latest version of this tarball, you're almost set.
Grab the latest release of the spy.jar (set of classes required to
run the servlet)  This can be obtained from the following location:
http://bleu.west.spy.net/~dustin/spyjar/

Step 2. Put the jars in in your CLASSPATH 

The jars need to be added to the directory(ies) that you keep all
your java classes in. Keep backups of your old copies.

Step 3.  Update configuration

I'd recommend dropping in a new config and changing whatever values are
different for you.

Step 4. Restart the Servlet Engine

Restart the servlet engine (and the helper app if you use it),
and you should be off and running.

----------------------------------------------------------------------

MIGRATION

If you are upgrading to a release before 2002/02/20, you will need to run
the third, fourth, and fifth migration kits.

NOTE:  A few things changed about the image format, so you'll need to clear
       your cache again before trying to use it.

If you are upgrading to a release before 2001/12/27, you will need to run
the second migration kit.

If you are upgrading to a release before 2000/07/16, you will need to run
the first migration kit.

Please be sure to back up your data before you attempt to run the migration
kit.  Backups are essential to data integrity!

Also, this release uses a new PhotoImage format, so you'll need to move
your cache before restarting the spyservices.  This is located in 
/var/tmp/rcache by default, or as defined by rhash.args in the spyrunner.conf. 
It's recommended to back up the cache, just in case something goes wrong.
This is both the first place your images are stored, and the first place
the image server looks for your images.  The storage is not portable across
versions (thanks to java), but if you need to roll back, it's good to have
around.

Restart the application server with the new classfile in place.

Once you've got your data backed up, cache cleared, and spyservices running
under the new version, you can use the following commands to begin the
migration:

    java net.spy.photo.migration.PhotoMigration01
    java net.spy.photo.migration.PhotoMigration02
    java net.spy.photo.migration.PhotoMigration03
    java net.spy.photo.migration.PhotoMigration04
    java net.spy.photo.migration.PhotoMigration05

Make sure to run this with the same class path you used to start the
application server.

It may take a while depending on how many images you have.  When it's done,
every image (including thumbnails) will be cached and ready to go.

It is safe to run the migration kits more than once, so when it doubt, run
them again.

----------------------------------------------------------------------

INSTALLING FROM SCRATCH

    Installation is a lot easier than it used to be.  For one thing, I no
longer force my swank distributed architecture on everybody (I think I was
the only person running PhotoServlet on more than one machine anyway).
This is now a configuration option and saves first-time users a bunch of
headache while still allowing me to have it my way.  :)

    I'm going to skip configution and management of the old-style helper
app and distributed image server and all that to avoid confusion.  If you
want to try it, send me email.

DATABASE SETUP

    I'm currently using postgres 7.1, but I believe a slightly
older version will work.  Some changes in Postgres 7.2 prevent this
software from running out of the box, but minor changes can be made
to the bootstrap SQL script to get it going.

    Although photoservlet could theoretically be run with
another database, it would require changes to the application, the
procedural language, and other areas.  (none of which are priorities
at this time)

    You can use another database name (photo) if you'd like,
just make sure you modify the config file to reflect the new database
name.  If you want to use a different username, you can do that as
well, but you'll have to modify the bootstrap script (etc/photo.sql)
and replace all references to ``nobody'' with your new username.

    Begin by creating the ``photo'' database, and the ``nobody''
user.  If you do not have an administrative user, please create
one to create tables under.  The example administrative user here
is ``berry''.

As postgres:

    $ createdb photo
    CREATE DATABASE
    $
    
    $ createuser nobody
    Shall the new user be allowed to create databases? (y/n) n  
    Shall the new user be allowed to create more new users? (y/n) n
    CREATE USER
    $
    
    $ createuser berry
    Shall the new user be allowed to create databases? (y/n) y
    Shall the new user be allowed to create more new users? (y/n) y
    CREATE USER
    $

    Once you can connect to the ``photo'' database as the user
``nobody,'' execute all of the commands in the script etc/photo.sql.
You will need to do this as a user who has access to create tables
in the database.  If there are any errors, report them as bugs,
please, and try to get ahold of me.  :)

    $ psql -f photo.sql photo berry
    BEGIN
    CREATE
    [...]
    COMMIT
    $

    The photo.sql script should not generate errors.  If it does, it's
likely you're running as a user not capable of creating tables, or are
running a version of postgres that isn't quite up-to-date.

----------------------------------------------------------------------

GENERAL USAGE

When you're first setting up, you'll want to create categories and users.

There's a link at the bottom that tells you which user you're authenticated as.
Clicking on that will take you to the authentication screen.  

The default user is ``admin'' with the password ``admin''.  Please, please,
please change the admin password before anything else (changepw.jsp).

The admin user is only special in that it has access to administrative
functions by default.  That is to say, any user may have equal
administrative access to the default user admin (and, for example, there is
no user ``admin'' in my photo album).

If you have administrative access enabled (either with the checkbox on the
login form, or if you enabled it after logging in (from credform.jsp)), you
will have an administrative menu available from the index page that gives
you all your management needs.

Next, create a few categories for your images.  Since categories are currently
made visible to the users through the user administration window, it's easier
to setup the categories, -then- the users.

Add users for yourself and your friends, capable of adding images. 
As you add the users, allow them access to the various categories you created.
You don't want all of your images showing up as ``admin''.

Let us know if you have any problems at dustin@spy.net or berry@housebsd.org.

----------------------------------------------------------------------

ERRATA

1. There's no UI yet for giving yourself admin privileges, but if you insert
    your userid into the group 'admin' in wwwgroup, you'll be able to request
    admin privs as yourself.

      $ pgsql photo nobody 

      photo=> select id from wwwusers where username='berry';
       id 
      ----
        3
      (1 row)

photo=> insert into wwwgroup values(3, 'admin');

----------------------------------------------------------------------
$Id: HOWTO,v 1.15 2002/06/23 03:01:47 dustin Exp $

