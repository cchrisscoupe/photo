# Database config
dbDriverName org.postgresql.Driver
dbSource jdbc:postgresql://localhost/photo
dbPoolName photo_db
dbUser nobody
dbPass nopass
# Pool tuning
# Two hours
dbMaxLifeTime 7200000
dbMinConns 0
dbMaxConns 5

objectserver //localhost/RObjectServer
imageserver //localhost/ImageServer
includes /home/dustin/prog/java/servlet/photo/etc/inc/

# Available stylesheets (runtime configurable)
xslt.default /home/dustin/prog/java/servlet/photo/etc/inc/xsl/default.xsl
xslt.simple  /home/dustin/prog/java/servlet/photo/etc/inc/xsl/simple.xsl

# the XSLT processor to use (this is the default).  Must comply with
# net.spy.photo.PhotoXSLT.
# This one requires Resin:
xslt_processor net.spy.photo.xslt.ResinXSLT
# This one requires Apache Xerces and Xalan (it's slow, but should work in
# any servlet engine):
# xslt_processor net.spy.photo.xslt.ApacheXSLT

# Debug timeouts
xml_cache_timeout 15
xslt_cache_timeout 15

# Mail server config
mail_server mail
# This is the sending address of mail the photoservlet sends (like new
# passwords)
mail_sender dustin+photoservlet@spy.net

# What's the timezone?
timezone GMT
# This is the hash to use for passwords
cryptohash SHA

# Upload config
# Where temporary files exist
upload_tmp_dir /tmp
# What's the maximum upload size (in bytes)?
upload_max_size 5242880

# This is the default ``optimal'' of the images as they should be displayed
# to browsers.  Images larger than the optimal size will be scaled down to
# fit the browser screen (but full-size images can always be requested).
optimal_image_size 800x600

# How big do you want your thumbnails?  (Thumbnails will maintain aspect
# ratio, but fit within the given dimensions)
thumbnail_size 220x146

# The default user is the user whose permissions are inherited by all other
# users.  If this user has permissions to view something, all other users
# will have permissions to view it (though it may not appear so in the
# ACLs).
default_user guest

# How many minutes between cleanup runs?  Default is 1440 (one day)
cleaner_sleep 1440

# queries the cleaner should run, they will run in numerical order...no
# numbers may be skipped, no result sets may be returned
# (this particular query probably does not work right now if your schema
# has referential integrity)
cleaner.query1 = delete from album where cat in \
	(select id from cat where name ='Deleted')
# cleaner.query2 = vacuum analyze


# Sample reports

# Most popular searches
report.repmostpopular.sql= \
	select photo_logs.photo_id, album.keywords, cat.name as catname, count(*) \
		from photo_logs, album, cat, log_types \
		where photo_logs.photo_id=album.id \
			and album.cat=cat.id \
			and log_types.log_type_id=photo_logs.log_type \
			and log_types.log_type = 'ImgView' \
		group by photo_id, keywords, catname \
		order by count desc \
		limit 50

report.repmostpopular.top=reports/mostpopular.top.inc
report.repmostpopular.row=reports/mostpopular.row.inc
report.repmostpopular.bottom=reports/mostpopular.bottom.inc


# most popular in the last 30 days
report.repmostpopular30d.sql=\
	select photo_logs.photo_id, album.keywords, cat.name as catname, count(*) \
		from photo_logs, album, cat, log_types \
		where photo_logs.photo_id=album.id \
			and album.cat = cat.id \
			and photo_logs.ts > 'now'::datetime-'30 days'::timespan \
			and log_types.log_type_id=photo_logs.log_type \
			and log_types.log_type = 'ImgView' \
		group by photo_id, keywords, catname \
		order by count desc \
		limit 50

report.repmostpopular30d.top=reports/mostpopular.top.inc
report.repmostpopular30d.row=reports/mostpopular.row.inc
report.repmostpopular30d.bottom=reports/mostpopular.bottom.inc


# Most common remote IP addresses
report.repmostcommonip.sql=\
	select photo_logs.remote_addr, count(*) \
		from photo_logs, log_types \
		where \
			log_types.log_type_id=photo_logs.log_type \
			and log_types.log_type = 'ImgView' \
		group by remote_addr \
		order by count desc \
		limit 50
report.repmostcommonip.top=reports/commonip.top.inc
report.repmostcommonip.row=reports/commonip.row.inc
report.repmostcommonip.bottom=reports/commonip.bottom.inc


# Logins
report.repauth.sql=\
	select * from auth_log_view \
		limit 50
report.repauth.top=reports/auth.top.inc
report.repauth.row=reports/auth.row.inc
report.repauth.bottom=reports/auth.bottom.inc

